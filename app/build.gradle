apply plugin: 'com.android.application'

def STRING = "String"
def BOOLEAN = "boolean"
def LONG = "long"

android {
  def globalConfiguration = rootProject.ext

  compileSdkVersion globalConfiguration.androidCompileSdkVersion
  buildToolsVersion globalConfiguration.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion globalConfiguration.androidMinSdkVersion
    targetSdkVersion globalConfiguration.androidTargetSdkVersion

    testInstrumentationRunner globalConfiguration.testInstrumentationRunner
    testApplicationId globalConfiguration.testApplicationId

    ndk { abiFilters "armeabi-v7a" }

    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath = true
      }
    }
  }

  buildTypes {
    def defaultProguardRule = getDefaultProguardFile('proguard-android.txt')
    def proguardKeepLogRule = '../buildsystem/proguard/proguard-rules-base.pro'
    debug {
      minifyEnabled false
      shrinkResources false
    }
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles defaultProguardRule, proguardKeepLogRule
    }
  }

  flavorDimensions globalConfiguration.androidDemension

  productFlavors {
    chongLe {
      dimension globalConfiguration.androidDemension
      applicationId globalConfiguration.choneLeApplicationId
      versionCode globalConfiguration.choneLeVersionCode
      versionName globalConfiguration.choneLeVersionName
    }
    jiajia {
      dimension globalConfiguration.androidDemension
      applicationId globalConfiguration.jiaJiaApplicationId
      versionCode globalConfiguration.jiaJiaVersionCode
      versionName globalConfiguration.jiaJiaVersionName
    }
  }

  applicationVariants.all { variant ->
    def mergedFlavor = variant.mergedFlavor
    if (variant.productFlavors.get(0).name == "chongLe") {
      if (variant.buildType.name == "release") {
        mergedFlavor.manifestPlaceholders = [JPUSH_PKGNAME: "com.jiajia.badou",
                                             JPUSH_APPKEY : "ba7dadaad97e2bb4b1c6fdf1",
                                             JPUSH_CHANNEL: "jiajia",
                                             APP_NAME     : "宠乐"]
      }
      if (variant.buildType.name == "debug") {
        mergedFlavor.manifestPlaceholders = [JPUSH_PKGNAME: "com.jiajia.badou",
                                             JPUSH_APPKEY : "ba7dadaad97e2bb4b1c6fdf1",
                                             JPUSH_CHANNEL: "jiajia",
                                             APP_NAME     : "宠乐测试"]
      }
    }
    if (variant.productFlavors.get(0).name == "jiajia") {
      if (variant.buildType.name == "release") {
        mergedFlavor.manifestPlaceholders = [JPUSH_PKGNAME: "com.jiajia.badou",
                                             JPUSH_APPKEY : "ba7dadaad97e2bb4b1c6fdf1",
                                             JPUSH_CHANNEL: "jiajia",
                                             APP_NAME     : "佳佳"]
      }
      if (variant.buildType.name == "debug") {
        mergedFlavor.manifestPlaceholders = [JPUSH_PKGNAME: "com.jiajia.badou",
                                             JPUSH_APPKEY : "ba7dadaad97e2bb4b1c6fdf1",
                                             JPUSH_CHANNEL: "jiajia",
                                             APP_NAME     : "佳佳测试版"]
      }
    }

    variant.outputs.all { output ->
      def outputFile = output.outputFile
      if (outputFile != null && outputFile.name.endsWith('.apk')) {
        def fileName = outputFile.name.replaceAll("app",
            "app_v${productFlavors.versionName}_${releaseTime()}").
            replaceAll("[\\[\\]]", "").
            replaceAll("-", "_")
        outputFileName = fileName
      }
    }
  }

  sourceSets {
    main {
      res.srcDirs = ['src/main/res',]
    }
    //    choneLeRelease {
    //      res.srcDirs = [
    //                     'src/choneLeRelease/res']
    //    }
    //    chongLeDebug {
    //      res.srcDirs = [
    //                     'src/chongLeDebug/res']
    //    }
    //    jiajiaDebug {
    //      res.srcDirs = [
    //                     'src/jiajiaDebug/res']
    //    }
    //    jiajiaRelease {
    //      res.srcDirs = [
    //                     'src/jiajiaRelease/res']
    //      // @formatter:on
    //    }
  }

  aaptOptions {
    cruncherEnabled = false
  }
}

repositories {
  maven { url "https://jitpack.io" }
  maven {
    url 'https://maven.google.com'
  }
}

def static releaseTime() {
  //  return new Date().format("yyyy-MM-dd_HH:mm:ss", TimeZone.getTimeZone("UTC"))
  //  return new Date().format("yyyy-MM-dd_HH:mm:ss", TimeZone.getTimeZone("Asia/Shanghai"))
  return new Date().format("yyyy-MM-dd_HH-mm", TimeZone.getTimeZone("Asia/Shanghai"))
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  //noinspection GradleCompatible
  implementation 'com.android.support:appcompat-v7:27.1.1'
  implementation 'com.android.support.constraint:constraint-layout:1.1.0'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.1'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
  //花式加载框
  implementation project(':LoadingView')
  implementation project(path: ':presenter')
  // 拍照
  implementation 'com.jph.takephoto:takephoto_library:4.0.3'
  // banner
  implementation 'com.youth.banner:banner:1.4.10'
  // superTextView
  implementation 'com.github.lygttpod:SuperTextView:2.1.5'
  implementation 'com.android.support:recyclerview-v7:27.1.1'
  implementation 'com.google.code.gson:gson:2.8.1'

  implementation 'com.jakewharton:butterknife:8.5.1'

  implementation 'com.jakewharton:butterknife-compiler:8.5.1'

  implementation "de.hdodenhof:circleimageview:2.1.0"

  implementation 'com.makeramen:roundedimageview:2.3.0'

  implementation 'com.android.support:cardview-v7:27.1.1'

  implementation 'cn.jiguang.sdk:jpush:3.1.1'
  implementation 'cn.jiguang.sdk:jcore:1.1.9'

  implementation 'org.jetbrains:annotations-java5:15.0'

  implementation "com.github.bumptech.glide:glide:3.7.0"

  implementation 'com.lzy.net:okgo:3.0.4'

  implementation 'jp.wasabeef:glide-transformations:2.0.2'

  implementation 'org.projectlombok:lombok:1.16.16'
  annotationProcessor 'org.projectlombok:lombok:1.16.16'

  implementation 'com.google.dagger:dagger:2.11'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.11'

  //EventBus
  implementation 'org.greenrobot:eventbus:3.1.1'

  //*********************** permission ***********************

  implementation 'com.lovedise:permissiongen:0.0.6'
  implementation 'org.jetbrains:annotations-java5:15.0'
}
